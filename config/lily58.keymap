/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <180>;
    flavor = "balanced";
};

/ {
    combos {
        compatible = "zmk,combos";

        ControlLY {
            bindings = <&to 1>;
            key-positions = <5 53>;
            slow-release;
            layers = <0 2 3 4>;
        };

        fromNav {
            bindings = <&to 0>;
            key-positions = <31 33>;
            layers = <2>;
        };

        toNav {
            bindings = <&to 2>;
            key-positions = <19 21>;
            layers = <0>;
            slow-release;
        };

        Minus {
            bindings = <&kp MINUS>;
            key-positions = <31 32>;
            layers = <0 2>;
        };

        Equal {
            bindings = <&kp EQUAL>;
            key-positions = <33 32>;
            layers = <0 2>;
        };

        skipNav {
            bindings = <&none>;
            key-positions = <31 33>;
            layers = <0>;
            slow-release;
        };
    };

    behaviors {
        tovh: tovh {
            compatible = "zmk,behavior-hold-tap";
            label = "TOVH";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
        };

        hovt: hovt {
            compatible = "zmk,behavior-hold-tap";
            label = "HOVT";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <150>;
        };

        tovhLt: tovhLt {
            compatible = "zmk,behavior-hold-tap";
            label = "TOVHLT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "tap-preferred";
            retro-tap;
        };

        capture: capture {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPTURE";
            #binding-cells = <0>;
            bindings = <&kp LG(C)>, <&kp LG(X)>;
        };
    };

    macros {
        dollardot: dollardot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DLLR &kp DOT>;
            label = "DOLLARDOT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        zero {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            label = "Base";
            bindings = <
&tovhLt 3 ESC  &kp Q   &kp W   &kp E             &kp R         &kp T                                                                         &kp Y           &kp U                 &kp I             &kp O    &kp P                  &tovhLt 3 BSLH
&tovh F24 TAB  &kp A   &kp S   &kp D             &kp F         &kp G                                                                         &kp H           &kp J                 &kp K             &kp L    &tovh LCTRL SEMICOLON  &tovh LS(LA(LC(LGUI))) SQT
&kp LSHFT      &kp Z   &kp X   &kp C             &kp V         &kp B                                                                         &kp N           &kp M                 &tovhLt 4 COMMA   &kp DOT  &kp FSLH               &hovt RIGHT_SHIFT GRAVE
&none          &kp N1  &kp N2  &kp N3            &kp N4        &kp N5             &mt LS(LA(LC(LGUI))) F13    &hovt F24 C_REPEAT             &kp N6          &kp N7                &kp N8            &kp N9   &kp N0                 &none
                               &kp LEFT_CONTROL  &kp LEFT_ALT  &hovt LGUI RETURN  &tovhLt 5 SPACE             &tovh LA(BACKSPACE) BACKSPACE  &mt RCMD ENTER  &tovh RIGHT_ALT LBKT  &tovh RCTRL RBKT
            >;
        };

        ControlLayer {
            bindings = <
&to 0       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                              &trans  &trans  &trans  &trans  &trans  &bootloader
&trans      &trans        &trans        &trans        &trans        &trans                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                                    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &trans        &trans        &trans        &trans        &trans        &bootloader    &bootloader  &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans        &trans         &trans       &trans  &trans  &trans
            >;

            label = "CtrlLy";
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans    &kp UP    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans     &trans  &trans
&to 0   &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans     &trans  &to 0
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans
            >;

            label = "NAV";
        };

        calcfunc {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4   &kp F5                     &dollardot  &kp N7    &kp N8          &kp N9        &none                  &trans
&trans  &kp F6  &kp F7  &kp F8  &kp F9   &kp F10                    &kp N0      &kp N4    &kp N5          &kp N6        &tovh SEMICOLON COLON  &trans
&trans  &none   &none   &none   &kp F11  &kp F12                    &none       &kp N1    &tovh COMMA N2  &tovh DOT N3  &trans                 &trans
&trans  &trans  &trans  &trans  &trans   &trans   &trans    &trans  &none       &kp PLUS  &kp MINUS       &kp STAR      &kp EQUAL              &trans
                        &trans  &trans   &trans   &trans    &trans  &trans      &trans    &trans
            >;
        };

        symbols {
            bindings = <
&trans  &none     &kp POUND  &kp DLLR  &kp PERCENT  &kp CARET                    &trans  &trans     &trans  &trans    &trans  &trans
&trans  &kp EXCL  &kp LPAR   &kp AT    &kp RPAR     &kp AMPS                     &trans  &trans     &trans  &trans    &trans  &trans
&trans  &none     &kp LBRC   &kp STAR  &kp RBRC     &none                        &trans  &kp UNDER  &trans  &kp PLUS  &trans  &trans
&trans  &none     &kp LBKT   &none     &kp RBKT     &none      &trans    &trans  &trans  &trans     &trans  &trans    &trans  &trans
                             &trans    &trans       &trans     &trans    &trans  &trans  &trans     &trans
            >;
        };

        actions {
            bindings = <
&trans  &trans         &trans     &trans    &trans     &trans                             &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LG(LS(Z))  &kp LG(Z)  &capture  &kp LG(V)  &mt F19 LG(F19)                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &none          &none      &none     &none      &none                              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans         &trans     &trans    &trans     &trans           &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                  &trans    &trans     &trans           &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
